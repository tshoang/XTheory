/*
 * generated by Xtext 2.13.0
 */
grammar InternalTheory;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package ac.soton.xtheory.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package ac.soton.xtheory.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import ac.soton.xtheory.services.TheoryGrammarAccess;

}
@parser::members {
	private TheoryGrammarAccess grammarAccess;

	public void setGrammarAccess(TheoryGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleTheory
entryRuleTheory
:
{ before(grammarAccess.getTheoryRule()); }
	 ruleTheory
{ after(grammarAccess.getTheoryRule()); } 
	 EOF 
;

// Rule Theory
ruleTheory 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTheoryAccess().getGroup()); }
		(rule__Theory__Group__0)
		{ after(grammarAccess.getTheoryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getNameAssignment()); }
		(rule__Parameter__NameAssignment)
		{ after(grammarAccess.getParameterAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getGroup()); }
		(rule__Type__Group__0)
		{ after(grammarAccess.getTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstructor
entryRuleConstructor
:
{ before(grammarAccess.getConstructorRule()); }
	 ruleConstructor
{ after(grammarAccess.getConstructorRule()); } 
	 EOF 
;

// Rule Constructor
ruleConstructor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstructorAccess().getGroup()); }
		(rule__Constructor__Group__0)
		{ after(grammarAccess.getConstructorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDestructor
entryRuleDestructor
:
{ before(grammarAccess.getDestructorRule()); }
	 ruleDestructor
{ after(grammarAccess.getDestructorRule()); } 
	 EOF 
;

// Rule Destructor
ruleDestructor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDestructorAccess().getGroup()); }
		(rule__Destructor__Group__0)
		{ after(grammarAccess.getDestructorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperator
entryRuleOperator
:
{ before(grammarAccess.getOperatorRule()); }
	 ruleOperator
{ after(grammarAccess.getOperatorRule()); } 
	 EOF 
;

// Rule Operator
ruleOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperatorAccess().getGroup()); }
		(rule__Operator__Group__0)
		{ after(grammarAccess.getOperatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgument
entryRuleArgument
:
{ before(grammarAccess.getArgumentRule()); }
	 ruleArgument
{ after(grammarAccess.getArgumentRule()); } 
	 EOF 
;

// Rule Argument
ruleArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentAccess().getGroup()); }
		(rule__Argument__Group__0)
		{ after(grammarAccess.getArgumentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCase
entryRuleCase
:
{ before(grammarAccess.getCaseRule()); }
	 ruleCase
{ after(grammarAccess.getCaseRule()); } 
	 EOF 
;

// Rule Case
ruleCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCaseAccess().getGroup()); }
		(rule__Case__Group__0)
		{ after(grammarAccess.getCaseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAxiom
entryRuleAxiom
:
{ before(grammarAccess.getAxiomRule()); }
	 ruleAxiom
{ after(grammarAccess.getAxiomRule()); } 
	 EOF 
;

// Rule Axiom
ruleAxiom 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAxiomAccess().getGroup()); }
		(rule__Axiom__Group__0)
		{ after(grammarAccess.getAxiomAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTheorem
entryRuleTheorem
:
{ before(grammarAccess.getTheoremRule()); }
	 ruleTheorem
{ after(grammarAccess.getTheoremRule()); } 
	 EOF 
;

// Rule Theorem
ruleTheorem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTheoremAccess().getGroup()); }
		(rule__Theorem__Group__0)
		{ after(grammarAccess.getTheoremAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRuleBlock
entryRuleRuleBlock
:
{ before(grammarAccess.getRuleBlockRule()); }
	 ruleRuleBlock
{ after(grammarAccess.getRuleBlockRule()); } 
	 EOF 
;

// Rule RuleBlock
ruleRuleBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleBlockAccess().getGroup()); }
		(rule__RuleBlock__Group__0)
		{ after(grammarAccess.getRuleBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRule
entryRuleRule
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getAlternatives()); }
		(rule__Rule__Alternatives)
		{ after(grammarAccess.getRuleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRewriteRule
entryRuleRewriteRule
:
{ before(grammarAccess.getRewriteRuleRule()); }
	 ruleRewriteRule
{ after(grammarAccess.getRewriteRuleRule()); } 
	 EOF 
;

// Rule RewriteRule
ruleRewriteRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRewriteRuleAccess().getGroup()); }
		(rule__RewriteRule__Group__0)
		{ after(grammarAccess.getRewriteRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInferenceRule
entryRuleInferenceRule
:
{ before(grammarAccess.getInferenceRuleRule()); }
	 ruleInferenceRule
{ after(grammarAccess.getInferenceRuleRule()); } 
	 EOF 
;

// Rule InferenceRule
ruleInferenceRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInferenceRuleAccess().getGroup()); }
		(rule__InferenceRule__Group__0)
		{ after(grammarAccess.getInferenceRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGiven
entryRuleGiven
:
{ before(grammarAccess.getGivenRule()); }
	 ruleGiven
{ after(grammarAccess.getGivenRule()); } 
	 EOF 
;

// Rule Given
ruleGiven 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGivenAccess().getGroup()); }
		(rule__Given__Group__0)
		{ after(grammarAccess.getGivenAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInfer
entryRuleInfer
:
{ before(grammarAccess.getInferRule()); }
	 ruleInfer
{ after(grammarAccess.getInferRule()); } 
	 EOF 
;

// Rule Infer
ruleInfer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInferAccess().getExpressionAssignment()); }
		(rule__Infer__ExpressionAssignment)
		{ after(grammarAccess.getInferAccess().getExpressionAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnconditionalRewrite
entryRuleUnconditionalRewrite
:
{ before(grammarAccess.getUnconditionalRewriteRule()); }
	 ruleUnconditionalRewrite
{ after(grammarAccess.getUnconditionalRewriteRule()); } 
	 EOF 
;

// Rule UnconditionalRewrite
ruleUnconditionalRewrite 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnconditionalRewriteAccess().getRhsAssignment()); }
		(rule__UnconditionalRewrite__RhsAssignment)
		{ after(grammarAccess.getUnconditionalRewriteAccess().getRhsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalRewrite
entryRuleConditionalRewrite
:
{ before(grammarAccess.getConditionalRewriteRule()); }
	 ruleConditionalRewrite
{ after(grammarAccess.getConditionalRewriteRule()); } 
	 EOF 
;

// Rule ConditionalRewrite
ruleConditionalRewrite 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalRewriteAccess().getGroup()); }
		(rule__ConditionalRewrite__Group__0)
		{ after(grammarAccess.getConditionalRewriteAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalRewriteRule
entryRuleConditionalRewriteRule
:
{ before(grammarAccess.getConditionalRewriteRuleRule()); }
	 ruleConditionalRewriteRule
{ after(grammarAccess.getConditionalRewriteRuleRule()); } 
	 EOF 
;

// Rule ConditionalRewriteRule
ruleConditionalRewriteRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalRewriteRuleAccess().getGroup()); }
		(rule__ConditionalRewriteRule__Group__0)
		{ after(grammarAccess.getConditionalRewriteRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Notation
ruleNotation
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotationAccess().getAlternatives()); }
		(rule__Notation__Alternatives)
		{ after(grammarAccess.getNotationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTheoryAccess().getGroup_4_0()); }
		(rule__Theory__Group_4_0__0)
		{ after(grammarAccess.getTheoryAccess().getGroup_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getTheoryAccess().getGroup_4_1()); }
		(rule__Theory__Group_4_1__0)
		{ after(grammarAccess.getTheoryAccess().getGroup_4_1()); }
	)
	|
	(
		{ before(grammarAccess.getTheoryAccess().getGroup_4_2()); }
		(rule__Theory__Group_4_2__0)
		{ after(grammarAccess.getTheoryAccess().getGroup_4_2()); }
	)
	|
	(
		{ before(grammarAccess.getTheoryAccess().getGroup_4_3()); }
		(rule__Theory__Group_4_3__0)
		{ after(grammarAccess.getTheoryAccess().getGroup_4_3()); }
	)
	|
	(
		{ before(grammarAccess.getTheoryAccess().getGroup_4_4()); }
		(rule__Theory__Group_4_4__0)
		{ after(grammarAccess.getTheoryAccess().getGroup_4_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__CommentAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getCommentML_COMMENTTerminalRuleCall_0_0_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getTypeAccess().getCommentML_COMMENTTerminalRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getCommentSL_COMMENTTerminalRuleCall_0_0_1()); }
		RULE_SL_COMMENT
		{ after(grammarAccess.getTypeAccess().getCommentSL_COMMENTTerminalRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__CommentAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstructorAccess().getCommentML_COMMENTTerminalRuleCall_0_0_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getConstructorAccess().getCommentML_COMMENTTerminalRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstructorAccess().getCommentSL_COMMENTTerminalRuleCall_0_0_1()); }
		RULE_SL_COMMENT
		{ after(grammarAccess.getConstructorAccess().getCommentSL_COMMENTTerminalRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Destructor__CommentAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDestructorAccess().getCommentML_COMMENTTerminalRuleCall_0_0_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getDestructorAccess().getCommentML_COMMENTTerminalRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDestructorAccess().getCommentSL_COMMENTTerminalRuleCall_0_0_1()); }
		RULE_SL_COMMENT
		{ after(grammarAccess.getDestructorAccess().getCommentSL_COMMENTTerminalRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__CommentAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getCommentML_COMMENTTerminalRuleCall_0_0_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getOperatorAccess().getCommentML_COMMENTTerminalRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getCommentSL_COMMENTTerminalRuleCall_0_0_1()); }
		RULE_SL_COMMENT
		{ after(grammarAccess.getOperatorAccess().getCommentSL_COMMENTTerminalRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Alternatives_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getDefinitionAssignment_6_1_0()); }
		(rule__Operator__DefinitionAssignment_6_1_0)
		{ after(grammarAccess.getOperatorAccess().getDefinitionAssignment_6_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getGroup_6_1_1()); }
		(rule__Operator__Group_6_1_1__0)
		{ after(grammarAccess.getOperatorAccess().getGroup_6_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__CommentAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentAccess().getCommentML_COMMENTTerminalRuleCall_0_0_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getArgumentAccess().getCommentML_COMMENTTerminalRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getArgumentAccess().getCommentSL_COMMENTTerminalRuleCall_0_0_1()); }
		RULE_SL_COMMENT
		{ after(grammarAccess.getArgumentAccess().getCommentSL_COMMENTTerminalRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axiom__CommentAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAxiomAccess().getCommentML_COMMENTTerminalRuleCall_0_0_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getAxiomAccess().getCommentML_COMMENTTerminalRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAxiomAccess().getCommentSL_COMMENTTerminalRuleCall_0_0_1()); }
		RULE_SL_COMMENT
		{ after(grammarAccess.getAxiomAccess().getCommentSL_COMMENTTerminalRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem__CommentAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTheoremAccess().getCommentML_COMMENTTerminalRuleCall_0_0_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getTheoremAccess().getCommentML_COMMENTTerminalRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTheoremAccess().getCommentSL_COMMENTTerminalRuleCall_0_0_1()); }
		RULE_SL_COMMENT
		{ after(grammarAccess.getTheoremAccess().getCommentSL_COMMENTTerminalRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleBlock__CommentAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleBlockAccess().getCommentML_COMMENTTerminalRuleCall_0_0_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getRuleBlockAccess().getCommentML_COMMENTTerminalRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRuleBlockAccess().getCommentSL_COMMENTTerminalRuleCall_0_0_1()); }
		RULE_SL_COMMENT
		{ after(grammarAccess.getRuleBlockAccess().getCommentSL_COMMENTTerminalRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getRruleAssignment_0()); }
		(rule__Rule__RruleAssignment_0)
		{ after(grammarAccess.getRuleAccess().getRruleAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getRuleAccess().getIruleAssignment_1()); }
		(rule__Rule__IruleAssignment_1)
		{ after(grammarAccess.getRuleAccess().getIruleAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__CommentAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getCommentML_COMMENTTerminalRuleCall_0_0_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getVariableAccess().getCommentML_COMMENTTerminalRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableAccess().getCommentSL_COMMENTTerminalRuleCall_0_0_1()); }
		RULE_SL_COMMENT
		{ after(grammarAccess.getVariableAccess().getCommentSL_COMMENTTerminalRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RewriteRule__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRewriteRuleAccess().getUruleAssignment_2_0()); }
		(rule__RewriteRule__UruleAssignment_2_0)
		{ after(grammarAccess.getRewriteRuleAccess().getUruleAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getRewriteRuleAccess().getCruleAssignment_2_1()); }
		(rule__RewriteRule__CruleAssignment_2_1)
		{ after(grammarAccess.getRewriteRuleAccess().getCruleAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Notation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotationAccess().getPREFIXEnumLiteralDeclaration_0()); }
		('prefix')
		{ after(grammarAccess.getNotationAccess().getPREFIXEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getNotationAccess().getINFIXEnumLiteralDeclaration_1()); }
		('infix')
		{ after(grammarAccess.getNotationAccess().getINFIXEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getNotationAccess().getPOSTFIXEnumLiteralDeclaration_2()); }
		('postfix')
		{ after(grammarAccess.getNotationAccess().getPOSTFIXEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theory__Group__0__Impl
	rule__Theory__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheoryAccess().getTheoryKeyword_0()); }
	'theory'
	{ after(grammarAccess.getTheoryAccess().getTheoryKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theory__Group__1__Impl
	rule__Theory__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheoryAccess().getNameAssignment_1()); }
	(rule__Theory__NameAssignment_1)
	{ after(grammarAccess.getTheoryAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theory__Group__2__Impl
	rule__Theory__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheoryAccess().getGroup_2()); }
	(rule__Theory__Group_2__0)?
	{ after(grammarAccess.getTheoryAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theory__Group__3__Impl
	rule__Theory__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheoryAccess().getGroup_3()); }
	(rule__Theory__Group_3__0)?
	{ after(grammarAccess.getTheoryAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theory__Group__4__Impl
	rule__Theory__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheoryAccess().getAlternatives_4()); }
	(rule__Theory__Alternatives_4)*
	{ after(grammarAccess.getTheoryAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theory__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheoryAccess().getEndKeyword_5()); }
	'end'
	{ after(grammarAccess.getTheoryAccess().getEndKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Theory__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theory__Group_2__0__Impl
	rule__Theory__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheoryAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getTheoryAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theory__Group_2__1__Impl
	rule__Theory__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTheoryAccess().getParametersAssignment_2_1()); }
		(rule__Theory__ParametersAssignment_2_1)
		{ after(grammarAccess.getTheoryAccess().getParametersAssignment_2_1()); }
	)
	(
		{ before(grammarAccess.getTheoryAccess().getParametersAssignment_2_1()); }
		(rule__Theory__ParametersAssignment_2_1)*
		{ after(grammarAccess.getTheoryAccess().getParametersAssignment_2_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theory__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheoryAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getTheoryAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Theory__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theory__Group_3__0__Impl
	rule__Theory__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheoryAccess().getImportsKeyword_3_0()); }
	'imports'
	{ after(grammarAccess.getTheoryAccess().getImportsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theory__Group_3__1__Impl
	rule__Theory__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheoryAccess().getImportsAssignment_3_1()); }
	(rule__Theory__ImportsAssignment_3_1)
	{ after(grammarAccess.getTheoryAccess().getImportsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theory__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheoryAccess().getImportsAssignment_3_2()); }
	(rule__Theory__ImportsAssignment_3_2)*
	{ after(grammarAccess.getTheoryAccess().getImportsAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Theory__Group_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theory__Group_4_0__0__Impl
	rule__Theory__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheoryAccess().getTypesKeyword_4_0_0()); }
	'types'
	{ after(grammarAccess.getTheoryAccess().getTypesKeyword_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group_4_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theory__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group_4_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTheoryAccess().getInternalElementsAssignment_4_0_1()); }
		(rule__Theory__InternalElementsAssignment_4_0_1)
		{ after(grammarAccess.getTheoryAccess().getInternalElementsAssignment_4_0_1()); }
	)
	(
		{ before(grammarAccess.getTheoryAccess().getInternalElementsAssignment_4_0_1()); }
		(rule__Theory__InternalElementsAssignment_4_0_1)*
		{ after(grammarAccess.getTheoryAccess().getInternalElementsAssignment_4_0_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Theory__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theory__Group_4_1__0__Impl
	rule__Theory__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheoryAccess().getOperatorsKeyword_4_1_0()); }
	'operators'
	{ after(grammarAccess.getTheoryAccess().getOperatorsKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theory__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTheoryAccess().getInternalElementsAssignment_4_1_1()); }
		(rule__Theory__InternalElementsAssignment_4_1_1)
		{ after(grammarAccess.getTheoryAccess().getInternalElementsAssignment_4_1_1()); }
	)
	(
		{ before(grammarAccess.getTheoryAccess().getInternalElementsAssignment_4_1_1()); }
		(rule__Theory__InternalElementsAssignment_4_1_1)*
		{ after(grammarAccess.getTheoryAccess().getInternalElementsAssignment_4_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Theory__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theory__Group_4_2__0__Impl
	rule__Theory__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheoryAccess().getAxiomsKeyword_4_2_0()); }
	'axioms'
	{ after(grammarAccess.getTheoryAccess().getAxiomsKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theory__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTheoryAccess().getInternalElementsAssignment_4_2_1()); }
		(rule__Theory__InternalElementsAssignment_4_2_1)
		{ after(grammarAccess.getTheoryAccess().getInternalElementsAssignment_4_2_1()); }
	)
	(
		{ before(grammarAccess.getTheoryAccess().getInternalElementsAssignment_4_2_1()); }
		(rule__Theory__InternalElementsAssignment_4_2_1)*
		{ after(grammarAccess.getTheoryAccess().getInternalElementsAssignment_4_2_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Theory__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theory__Group_4_3__0__Impl
	rule__Theory__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheoryAccess().getTheoremsKeyword_4_3_0()); }
	'theorems'
	{ after(grammarAccess.getTheoryAccess().getTheoremsKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theory__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTheoryAccess().getInternalElementsAssignment_4_3_1()); }
		(rule__Theory__InternalElementsAssignment_4_3_1)
		{ after(grammarAccess.getTheoryAccess().getInternalElementsAssignment_4_3_1()); }
	)
	(
		{ before(grammarAccess.getTheoryAccess().getInternalElementsAssignment_4_3_1()); }
		(rule__Theory__InternalElementsAssignment_4_3_1)*
		{ after(grammarAccess.getTheoryAccess().getInternalElementsAssignment_4_3_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Theory__Group_4_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theory__Group_4_4__0__Impl
	rule__Theory__Group_4_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group_4_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheoryAccess().getRulesKeyword_4_4_0()); }
	'rules'
	{ after(grammarAccess.getTheoryAccess().getRulesKeyword_4_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group_4_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theory__Group_4_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__Group_4_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTheoryAccess().getInternalElementsAssignment_4_4_1()); }
		(rule__Theory__InternalElementsAssignment_4_4_1)
		{ after(grammarAccess.getTheoryAccess().getInternalElementsAssignment_4_4_1()); }
	)
	(
		{ before(grammarAccess.getTheoryAccess().getInternalElementsAssignment_4_4_1()); }
		(rule__Theory__InternalElementsAssignment_4_4_1)*
		{ after(grammarAccess.getTheoryAccess().getInternalElementsAssignment_4_4_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__0__Impl
	rule__Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getCommentAssignment_0()); }
	(rule__Type__CommentAssignment_0)?
	{ after(grammarAccess.getTypeAccess().getCommentAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__1__Impl
	rule__Type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getNameAssignment_1()); }
	(rule__Type__NameAssignment_1)
	{ after(grammarAccess.getTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__2__Impl
	rule__Type__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getGroup_2()); }
	(rule__Type__Group_2__0)?
	{ after(grammarAccess.getTypeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__3__Impl
	rule__Type__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getTypeAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__4__Impl
	rule__Type__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getConstructorsAssignment_4()); }
	(rule__Type__ConstructorsAssignment_4)
	{ after(grammarAccess.getTypeAccess().getConstructorsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getGroup_5()); }
	(rule__Type__Group_5__0)*
	{ after(grammarAccess.getTypeAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__0__Impl
	rule__Type__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__1__Impl
	rule__Type__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTypeAccess().getParametersAssignment_2_1()); }
		(rule__Type__ParametersAssignment_2_1)
		{ after(grammarAccess.getTypeAccess().getParametersAssignment_2_1()); }
	)
	(
		{ before(grammarAccess.getTypeAccess().getParametersAssignment_2_1()); }
		(rule__Type__ParametersAssignment_2_1)*
		{ after(grammarAccess.getTypeAccess().getParametersAssignment_2_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_5__0__Impl
	rule__Type__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getVerticalLineKeyword_5_0()); }
	'|'
	{ after(grammarAccess.getTypeAccess().getVerticalLineKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getConstructorsAssignment_5_1()); }
	(rule__Type__ConstructorsAssignment_5_1)
	{ after(grammarAccess.getTypeAccess().getConstructorsAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constructor__Group__0__Impl
	rule__Constructor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorAccess().getCommentAssignment_0()); }
	(rule__Constructor__CommentAssignment_0)?
	{ after(grammarAccess.getConstructorAccess().getCommentAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constructor__Group__1__Impl
	rule__Constructor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorAccess().getNameAssignment_1()); }
	(rule__Constructor__NameAssignment_1)
	{ after(grammarAccess.getConstructorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constructor__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorAccess().getGroup_2()); }
	(rule__Constructor__Group_2__0)?
	{ after(grammarAccess.getConstructorAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constructor__Group_2__0__Impl
	rule__Constructor__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getConstructorAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constructor__Group_2__1__Impl
	rule__Constructor__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorAccess().getDestructorsAssignment_2_1()); }
	(rule__Constructor__DestructorsAssignment_2_1)
	{ after(grammarAccess.getConstructorAccess().getDestructorsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constructor__Group_2__2__Impl
	rule__Constructor__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorAccess().getGroup_2_2()); }
	(rule__Constructor__Group_2_2__0)*
	{ after(grammarAccess.getConstructorAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constructor__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorAccess().getRightParenthesisKeyword_2_3()); }
	')'
	{ after(grammarAccess.getConstructorAccess().getRightParenthesisKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constructor__Group_2_2__0__Impl
	rule__Constructor__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getConstructorAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constructor__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorAccess().getDestructorsAssignment_2_2_1()); }
	(rule__Constructor__DestructorsAssignment_2_2_1)
	{ after(grammarAccess.getConstructorAccess().getDestructorsAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Destructor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Destructor__Group__0__Impl
	rule__Destructor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Destructor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDestructorAccess().getCommentAssignment_0()); }
	(rule__Destructor__CommentAssignment_0)?
	{ after(grammarAccess.getDestructorAccess().getCommentAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Destructor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Destructor__Group__1__Impl
	rule__Destructor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Destructor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDestructorAccess().getNameAssignment_1()); }
	(rule__Destructor__NameAssignment_1)
	{ after(grammarAccess.getDestructorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Destructor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Destructor__Group__2__Impl
	rule__Destructor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Destructor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDestructorAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getDestructorAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Destructor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Destructor__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Destructor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDestructorAccess().getTypeAssignment_3()); }
	(rule__Destructor__TypeAssignment_3)
	{ after(grammarAccess.getDestructorAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group__0__Impl
	rule__Operator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getCommentAssignment_0()); }
	(rule__Operator__CommentAssignment_0)?
	{ after(grammarAccess.getOperatorAccess().getCommentAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group__1__Impl
	rule__Operator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getNameAssignment_1()); }
	(rule__Operator__NameAssignment_1)
	{ after(grammarAccess.getOperatorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group__2__Impl
	rule__Operator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getGroup_2()); }
	(rule__Operator__Group_2__0)?
	{ after(grammarAccess.getOperatorAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group__3__Impl
	rule__Operator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getUnorderedGroup_3()); }
	(rule__Operator__UnorderedGroup_3)
	{ after(grammarAccess.getOperatorAccess().getUnorderedGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group__4__Impl
	rule__Operator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getGroup_4()); }
	(rule__Operator__Group_4__0)?
	{ after(grammarAccess.getOperatorAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group__5__Impl
	rule__Operator__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getGroup_5()); }
	(rule__Operator__Group_5__0)?
	{ after(grammarAccess.getOperatorAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getGroup_6()); }
	(rule__Operator__Group_6__0)?
	{ after(grammarAccess.getOperatorAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operator__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group_2__0__Impl
	rule__Operator__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getOperatorAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group_2__1__Impl
	rule__Operator__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getArgumentsAssignment_2_1()); }
	(rule__Operator__ArgumentsAssignment_2_1)
	{ after(grammarAccess.getOperatorAccess().getArgumentsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group_2__2__Impl
	rule__Operator__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getGroup_2_2()); }
	(rule__Operator__Group_2_2__0)*
	{ after(grammarAccess.getOperatorAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getRightParenthesisKeyword_2_3()); }
	')'
	{ after(grammarAccess.getOperatorAccess().getRightParenthesisKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operator__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group_2_2__0__Impl
	rule__Operator__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getOperatorAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getArgumentsAssignment_2_2_1()); }
	(rule__Operator__ArgumentsAssignment_2_2_1)
	{ after(grammarAccess.getOperatorAccess().getArgumentsAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operator__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group_3_0__0__Impl
	rule__Operator__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getColonKeyword_3_0_0()); }
	':'
	{ after(grammarAccess.getOperatorAccess().getColonKeyword_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getTypeAssignment_3_0_1()); }
	(rule__Operator__TypeAssignment_3_0_1)
	{ after(grammarAccess.getOperatorAccess().getTypeAssignment_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operator__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group_3_2__0__Impl
	rule__Operator__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getAssociativeAssignment_3_2_0()); }
	(rule__Operator__AssociativeAssignment_3_2_0)
	{ after(grammarAccess.getOperatorAccess().getAssociativeAssignment_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getCommutativeAssignment_3_2_1()); }
	(rule__Operator__CommutativeAssignment_3_2_1)?
	{ after(grammarAccess.getOperatorAccess().getCommutativeAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operator__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group_4__0__Impl
	rule__Operator__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getNumberSignKeyword_4_0()); }
	'#'
	{ after(grammarAccess.getOperatorAccess().getNumberSignKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getPrecedentAssignment_4_1()); }
	(rule__Operator__PrecedentAssignment_4_1)
	{ after(grammarAccess.getOperatorAccess().getPrecedentAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operator__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group_5__0__Impl
	rule__Operator__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getForKeyword_5_0()); }
	'for'
	{ after(grammarAccess.getOperatorAccess().getForKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getWdAssignment_5_1()); }
	(rule__Operator__WdAssignment_5_1)
	{ after(grammarAccess.getOperatorAccess().getWdAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operator__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group_6__0__Impl
	rule__Operator__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getEqualsSignKeyword_6_0()); }
	'='
	{ after(grammarAccess.getOperatorAccess().getEqualsSignKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getAlternatives_6_1()); }
	(rule__Operator__Alternatives_6_1)
	{ after(grammarAccess.getOperatorAccess().getAlternatives_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operator__Group_6_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group_6_1_1__0__Impl
	rule__Operator__Group_6_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_6_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getCaseKeyword_6_1_1_0()); }
	'case'
	{ after(grammarAccess.getOperatorAccess().getCaseKeyword_6_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_6_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group_6_1_1__1__Impl
	rule__Operator__Group_6_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_6_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatorAccess().getCaseAssignment_6_1_1_1()); }
	(rule__Operator__CaseAssignment_6_1_1_1)
	{ after(grammarAccess.getOperatorAccess().getCaseAssignment_6_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_6_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__Group_6_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_6_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getOperatorAccess().getCasesAssignment_6_1_1_2()); }
		(rule__Operator__CasesAssignment_6_1_1_2)
		{ after(grammarAccess.getOperatorAccess().getCasesAssignment_6_1_1_2()); }
	)
	(
		{ before(grammarAccess.getOperatorAccess().getCasesAssignment_6_1_1_2()); }
		(rule__Operator__CasesAssignment_6_1_1_2)*
		{ after(grammarAccess.getOperatorAccess().getCasesAssignment_6_1_1_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group__0__Impl
	rule__Argument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getCommentAssignment_0()); }
	(rule__Argument__CommentAssignment_0)?
	{ after(grammarAccess.getArgumentAccess().getCommentAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group__1__Impl
	rule__Argument__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getNameAssignment_1()); }
	(rule__Argument__NameAssignment_1)
	{ after(grammarAccess.getArgumentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group__2__Impl
	rule__Argument__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getArgumentAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getTypeAssignment_3()); }
	(rule__Argument__TypeAssignment_3)
	{ after(grammarAccess.getArgumentAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case__Group__0__Impl
	rule__Case__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseAccess().getPatternAssignment_0()); }
	(rule__Case__PatternAssignment_0)
	{ after(grammarAccess.getCaseAccess().getPatternAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case__Group__1__Impl
	rule__Case__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseAccess().getEqualsSignGreaterThanSignKeyword_1()); }
	'=>'
	{ after(grammarAccess.getCaseAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseAccess().getFormulaAssignment_2()); }
	(rule__Case__FormulaAssignment_2)
	{ after(grammarAccess.getCaseAccess().getFormulaAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Axiom__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axiom__Group__0__Impl
	rule__Axiom__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Axiom__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxiomAccess().getCommentAssignment_0()); }
	(rule__Axiom__CommentAssignment_0)?
	{ after(grammarAccess.getAxiomAccess().getCommentAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axiom__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axiom__Group__1__Impl
	rule__Axiom__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Axiom__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxiomAccess().getCommercialAtKeyword_1()); }
	'@'
	{ after(grammarAccess.getAxiomAccess().getCommercialAtKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axiom__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axiom__Group__2__Impl
	rule__Axiom__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Axiom__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxiomAccess().getNameAssignment_2()); }
	(rule__Axiom__NameAssignment_2)
	{ after(grammarAccess.getAxiomAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axiom__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axiom__Group__3__Impl
	rule__Axiom__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Axiom__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxiomAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getAxiomAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axiom__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Axiom__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Axiom__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAxiomAccess().getPredicateAssignment_4()); }
	(rule__Axiom__PredicateAssignment_4)
	{ after(grammarAccess.getAxiomAccess().getPredicateAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Theorem__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theorem__Group__0__Impl
	rule__Theorem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheoremAccess().getCommentAssignment_0()); }
	(rule__Theorem__CommentAssignment_0)?
	{ after(grammarAccess.getTheoremAccess().getCommentAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theorem__Group__1__Impl
	rule__Theorem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheoremAccess().getCommercialAtKeyword_1()); }
	'@'
	{ after(grammarAccess.getTheoremAccess().getCommercialAtKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theorem__Group__2__Impl
	rule__Theorem__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheoremAccess().getNameAssignment_2()); }
	(rule__Theorem__NameAssignment_2)
	{ after(grammarAccess.getTheoremAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theorem__Group__3__Impl
	rule__Theorem__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheoremAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getTheoremAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theorem__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheoremAccess().getPredicateAssignment_4()); }
	(rule__Theorem__PredicateAssignment_4)
	{ after(grammarAccess.getTheoremAccess().getPredicateAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleBlock__Group__0__Impl
	rule__RuleBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleBlockAccess().getCommentAssignment_0()); }
	(rule__RuleBlock__CommentAssignment_0)?
	{ after(grammarAccess.getRuleBlockAccess().getCommentAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleBlock__Group__1__Impl
	rule__RuleBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleBlockAccess().getCommercialAtKeyword_1()); }
	'@'
	{ after(grammarAccess.getRuleBlockAccess().getCommercialAtKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleBlock__Group__2__Impl
	rule__RuleBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleBlockAccess().getNameAssignment_2()); }
	(rule__RuleBlock__NameAssignment_2)
	{ after(grammarAccess.getRuleBlockAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleBlock__Group__3__Impl
	rule__RuleBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleBlockAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getRuleBlockAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleBlock__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleBlock__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleBlock__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleBlockAccess().getGroup_4()); }
	(rule__RuleBlock__Group_4__0)
	{ after(grammarAccess.getRuleBlockAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleBlock__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleBlock__Group_4__0__Impl
	rule__RuleBlock__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleBlock__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleBlockAccess().getGroup_4_0()); }
	(rule__RuleBlock__Group_4_0__0)?
	{ after(grammarAccess.getRuleBlockAccess().getGroup_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleBlock__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleBlock__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleBlock__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleBlockAccess().getRuleAssignment_4_1()); }
	(rule__RuleBlock__RuleAssignment_4_1)
	{ after(grammarAccess.getRuleBlockAccess().getRuleAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleBlock__Group_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleBlock__Group_4_0__0__Impl
	rule__RuleBlock__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleBlock__Group_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleBlockAccess().getVariablesKeyword_4_0_0()); }
	'variables'
	{ after(grammarAccess.getRuleBlockAccess().getVariablesKeyword_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleBlock__Group_4_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleBlock__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleBlock__Group_4_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRuleBlockAccess().getVariablesAssignment_4_0_1()); }
		(rule__RuleBlock__VariablesAssignment_4_0_1)
		{ after(grammarAccess.getRuleBlockAccess().getVariablesAssignment_4_0_1()); }
	)
	(
		{ before(grammarAccess.getRuleBlockAccess().getVariablesAssignment_4_0_1()); }
		(rule__RuleBlock__VariablesAssignment_4_0_1)*
		{ after(grammarAccess.getRuleBlockAccess().getVariablesAssignment_4_0_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getCommentAssignment_0()); }
	(rule__Variable__CommentAssignment_0)?
	{ after(grammarAccess.getVariableAccess().getCommentAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
	rule__Variable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getNameAssignment_1()); }
	(rule__Variable__NameAssignment_1)
	{ after(grammarAccess.getVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__2__Impl
	rule__Variable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getVariableAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getTypeAssignment_3()); }
	(rule__Variable__TypeAssignment_3)
	{ after(grammarAccess.getVariableAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RewriteRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RewriteRule__Group__0__Impl
	rule__RewriteRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RewriteRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRewriteRuleAccess().getPatternAssignment_0()); }
	(rule__RewriteRule__PatternAssignment_0)
	{ after(grammarAccess.getRewriteRuleAccess().getPatternAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RewriteRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RewriteRule__Group__1__Impl
	rule__RewriteRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RewriteRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRewriteRuleAccess().getEqualsSignEqualsSignKeyword_1()); }
	'=='
	{ after(grammarAccess.getRewriteRuleAccess().getEqualsSignEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RewriteRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RewriteRule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RewriteRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRewriteRuleAccess().getAlternatives_2()); }
	(rule__RewriteRule__Alternatives_2)
	{ after(grammarAccess.getRewriteRuleAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InferenceRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InferenceRule__Group__0__Impl
	rule__InferenceRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InferenceRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInferenceRuleAccess().getGivenAssignment_0()); }
	(rule__InferenceRule__GivenAssignment_0)*
	{ after(grammarAccess.getInferenceRuleAccess().getGivenAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InferenceRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InferenceRule__Group__1__Impl
	rule__InferenceRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InferenceRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInferenceRuleAccess().getVerticalLineHyphenMinusKeyword_1()); }
	'|-'
	{ after(grammarAccess.getInferenceRuleAccess().getVerticalLineHyphenMinusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InferenceRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InferenceRule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InferenceRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInferenceRuleAccess().getInferAssignment_2()); }
	(rule__InferenceRule__InferAssignment_2)
	{ after(grammarAccess.getInferenceRuleAccess().getInferAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Given__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given__Group__0__Impl
	rule__Given__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGivenAccess().getExpressionAssignment_0()); }
	(rule__Given__ExpressionAssignment_0)
	{ after(grammarAccess.getGivenAccess().getExpressionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGivenAccess().getRequiredAssignment_1()); }
	(rule__Given__RequiredAssignment_1)?
	{ after(grammarAccess.getGivenAccess().getRequiredAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalRewrite__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalRewrite__Group__0__Impl
	rule__ConditionalRewrite__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRewrite__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalRewriteAccess().getRewritesAssignment_0()); }
	(rule__ConditionalRewrite__RewritesAssignment_0)
	{ after(grammarAccess.getConditionalRewriteAccess().getRewritesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRewrite__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalRewrite__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRewrite__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalRewriteAccess().getRewritesAssignment_1()); }
	(rule__ConditionalRewrite__RewritesAssignment_1)*
	{ after(grammarAccess.getConditionalRewriteAccess().getRewritesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalRewriteRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalRewriteRule__Group__0__Impl
	rule__ConditionalRewriteRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRewriteRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalRewriteRuleAccess().getLhsAssignment_0()); }
	(rule__ConditionalRewriteRule__LhsAssignment_0)
	{ after(grammarAccess.getConditionalRewriteRuleAccess().getLhsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRewriteRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalRewriteRule__Group__1__Impl
	rule__ConditionalRewriteRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRewriteRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalRewriteRuleAccess().getEqualsSignGreaterThanSignKeyword_1()); }
	'=>'
	{ after(grammarAccess.getConditionalRewriteRuleAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRewriteRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalRewriteRule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRewriteRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalRewriteRuleAccess().getRhsAssignment_2()); }
	(rule__ConditionalRewriteRule__RhsAssignment_2)
	{ after(grammarAccess.getConditionalRewriteRuleAccess().getRhsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operator__UnorderedGroup_3
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getOperatorAccess().getUnorderedGroup_3());
	}
:
	rule__Operator__UnorderedGroup_3__0
	?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getOperatorAccess().getUnorderedGroup_3());
	restoreStackSize(stackSize);
}

rule__Operator__UnorderedGroup_3__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getOperatorAccess().getUnorderedGroup_3(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getOperatorAccess().getUnorderedGroup_3(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getOperatorAccess().getGroup_3_0()); }
					(rule__Operator__Group_3_0__0)
					{ after(grammarAccess.getOperatorAccess().getGroup_3_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getOperatorAccess().getUnorderedGroup_3(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getOperatorAccess().getUnorderedGroup_3(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getOperatorAccess().getNotationAssignment_3_1()); }
					(rule__Operator__NotationAssignment_3_1)
					{ after(grammarAccess.getOperatorAccess().getNotationAssignment_3_1()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getOperatorAccess().getUnorderedGroup_3(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getOperatorAccess().getUnorderedGroup_3(), 2);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getOperatorAccess().getGroup_3_2()); }
					(rule__Operator__Group_3_2__0)
					{ after(grammarAccess.getOperatorAccess().getGroup_3_2()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOperatorAccess().getUnorderedGroup_3());
	restoreStackSize(stackSize);
}

rule__Operator__UnorderedGroup_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__UnorderedGroup_3__Impl
	rule__Operator__UnorderedGroup_3__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__UnorderedGroup_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__UnorderedGroup_3__Impl
	rule__Operator__UnorderedGroup_3__2?
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__UnorderedGroup_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operator__UnorderedGroup_3__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__Theory__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTheoryAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTheoryAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__ParametersAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTheoryAccess().getParametersParameterParserRuleCall_2_1_0()); }
		ruleParameter
		{ after(grammarAccess.getTheoryAccess().getParametersParameterParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__ImportsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTheoryAccess().getImportsIDTerminalRuleCall_3_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTheoryAccess().getImportsIDTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__ImportsAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTheoryAccess().getImportsIDTerminalRuleCall_3_2_0()); }
		RULE_ID
		{ after(grammarAccess.getTheoryAccess().getImportsIDTerminalRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__InternalElementsAssignment_4_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTheoryAccess().getInternalElementsTypeParserRuleCall_4_0_1_0()); }
		ruleType
		{ after(grammarAccess.getTheoryAccess().getInternalElementsTypeParserRuleCall_4_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__InternalElementsAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTheoryAccess().getInternalElementsOperatorParserRuleCall_4_1_1_0()); }
		ruleOperator
		{ after(grammarAccess.getTheoryAccess().getInternalElementsOperatorParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__InternalElementsAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTheoryAccess().getInternalElementsAxiomParserRuleCall_4_2_1_0()); }
		ruleAxiom
		{ after(grammarAccess.getTheoryAccess().getInternalElementsAxiomParserRuleCall_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__InternalElementsAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTheoryAccess().getInternalElementsTheoremParserRuleCall_4_3_1_0()); }
		ruleTheorem
		{ after(grammarAccess.getTheoryAccess().getInternalElementsTheoremParserRuleCall_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theory__InternalElementsAssignment_4_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTheoryAccess().getInternalElementsRuleBlockParserRuleCall_4_4_1_0()); }
		ruleRuleBlock
		{ after(grammarAccess.getTheoryAccess().getInternalElementsRuleBlockParserRuleCall_4_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__CommentAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getCommentAlternatives_0_0()); }
		(rule__Type__CommentAlternatives_0_0)
		{ after(grammarAccess.getTypeAccess().getCommentAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__ParametersAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getParametersParameterCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getTypeAccess().getParametersParameterIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTypeAccess().getParametersParameterIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getTypeAccess().getParametersParameterCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__ConstructorsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getConstructorsConstructorParserRuleCall_4_0()); }
		ruleConstructor
		{ after(grammarAccess.getTypeAccess().getConstructorsConstructorParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__ConstructorsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getConstructorsConstructorParserRuleCall_5_1_0()); }
		ruleConstructor
		{ after(grammarAccess.getTypeAccess().getConstructorsConstructorParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__CommentAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstructorAccess().getCommentAlternatives_0_0()); }
		(rule__Constructor__CommentAlternatives_0_0)
		{ after(grammarAccess.getConstructorAccess().getCommentAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstructorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getConstructorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__DestructorsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstructorAccess().getDestructorsDestructorParserRuleCall_2_1_0()); }
		ruleDestructor
		{ after(grammarAccess.getConstructorAccess().getDestructorsDestructorParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__DestructorsAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstructorAccess().getDestructorsDestructorParserRuleCall_2_2_1_0()); }
		ruleDestructor
		{ after(grammarAccess.getConstructorAccess().getDestructorsDestructorParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Destructor__CommentAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDestructorAccess().getCommentAlternatives_0_0()); }
		(rule__Destructor__CommentAlternatives_0_0)
		{ after(grammarAccess.getDestructorAccess().getCommentAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Destructor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDestructorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDestructorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Destructor__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDestructorAccess().getTypeSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getDestructorAccess().getTypeSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__CommentAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getCommentAlternatives_0_0()); }
		(rule__Operator__CommentAlternatives_0_0)
		{ after(grammarAccess.getOperatorAccess().getCommentAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getOperatorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__ArgumentsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getArgumentsArgumentParserRuleCall_2_1_0()); }
		ruleArgument
		{ after(grammarAccess.getOperatorAccess().getArgumentsArgumentParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__ArgumentsAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getArgumentsArgumentParserRuleCall_2_2_1_0()); }
		ruleArgument
		{ after(grammarAccess.getOperatorAccess().getArgumentsArgumentParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__TypeAssignment_3_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getTypeSTRINGTerminalRuleCall_3_0_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getOperatorAccess().getTypeSTRINGTerminalRuleCall_3_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__NotationAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getNotationNotationEnumRuleCall_3_1_0()); }
		ruleNotation
		{ after(grammarAccess.getOperatorAccess().getNotationNotationEnumRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__AssociativeAssignment_3_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getAssociativeAssociativeKeyword_3_2_0_0()); }
		(
			{ before(grammarAccess.getOperatorAccess().getAssociativeAssociativeKeyword_3_2_0_0()); }
			'associative'
			{ after(grammarAccess.getOperatorAccess().getAssociativeAssociativeKeyword_3_2_0_0()); }
		)
		{ after(grammarAccess.getOperatorAccess().getAssociativeAssociativeKeyword_3_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__CommutativeAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getCommutativeCommutativeKeyword_3_2_1_0()); }
		(
			{ before(grammarAccess.getOperatorAccess().getCommutativeCommutativeKeyword_3_2_1_0()); }
			'commutative'
			{ after(grammarAccess.getOperatorAccess().getCommutativeCommutativeKeyword_3_2_1_0()); }
		)
		{ after(grammarAccess.getOperatorAccess().getCommutativeCommutativeKeyword_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__PrecedentAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getPrecedentINTTerminalRuleCall_4_1_0()); }
		RULE_INT
		{ after(grammarAccess.getOperatorAccess().getPrecedentINTTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__WdAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getWdSTRINGTerminalRuleCall_5_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getOperatorAccess().getWdSTRINGTerminalRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__DefinitionAssignment_6_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getDefinitionSTRINGTerminalRuleCall_6_1_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getOperatorAccess().getDefinitionSTRINGTerminalRuleCall_6_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__CaseAssignment_6_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getCaseIDTerminalRuleCall_6_1_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getOperatorAccess().getCaseIDTerminalRuleCall_6_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__CasesAssignment_6_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getCasesCaseParserRuleCall_6_1_1_2_0()); }
		ruleCase
		{ after(grammarAccess.getOperatorAccess().getCasesCaseParserRuleCall_6_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__CommentAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentAccess().getCommentAlternatives_0_0()); }
		(rule__Argument__CommentAlternatives_0_0)
		{ after(grammarAccess.getArgumentAccess().getCommentAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getArgumentAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentAccess().getTypeSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getArgumentAccess().getTypeSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__PatternAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseAccess().getPatternSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getCaseAccess().getPatternSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__FormulaAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseAccess().getFormulaSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getCaseAccess().getFormulaSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axiom__CommentAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAxiomAccess().getCommentAlternatives_0_0()); }
		(rule__Axiom__CommentAlternatives_0_0)
		{ after(grammarAccess.getAxiomAccess().getCommentAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axiom__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAxiomAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getAxiomAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axiom__PredicateAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAxiomAccess().getPredicateSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getAxiomAccess().getPredicateSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem__CommentAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTheoremAccess().getCommentAlternatives_0_0()); }
		(rule__Theorem__CommentAlternatives_0_0)
		{ after(grammarAccess.getTheoremAccess().getCommentAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTheoremAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getTheoremAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem__PredicateAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTheoremAccess().getPredicateSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getTheoremAccess().getPredicateSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleBlock__CommentAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleBlockAccess().getCommentAlternatives_0_0()); }
		(rule__RuleBlock__CommentAlternatives_0_0)
		{ after(grammarAccess.getRuleBlockAccess().getCommentAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleBlock__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleBlockAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getRuleBlockAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleBlock__VariablesAssignment_4_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleBlockAccess().getVariablesVariableParserRuleCall_4_0_1_0()); }
		ruleVariable
		{ after(grammarAccess.getRuleBlockAccess().getVariablesVariableParserRuleCall_4_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleBlock__RuleAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleBlockAccess().getRuleRuleParserRuleCall_4_1_0()); }
		ruleRule
		{ after(grammarAccess.getRuleBlockAccess().getRuleRuleParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__RruleAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getRruleRewriteRuleParserRuleCall_0_0()); }
		ruleRewriteRule
		{ after(grammarAccess.getRuleAccess().getRruleRewriteRuleParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__IruleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getIruleInferenceRuleParserRuleCall_1_0()); }
		ruleInferenceRule
		{ after(grammarAccess.getRuleAccess().getIruleInferenceRuleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__CommentAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getCommentAlternatives_0_0()); }
		(rule__Variable__CommentAlternatives_0_0)
		{ after(grammarAccess.getVariableAccess().getCommentAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getTypeSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getVariableAccess().getTypeSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RewriteRule__PatternAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRewriteRuleAccess().getPatternSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getRewriteRuleAccess().getPatternSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RewriteRule__UruleAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRewriteRuleAccess().getUruleUnconditionalRewriteParserRuleCall_2_0_0()); }
		ruleUnconditionalRewrite
		{ after(grammarAccess.getRewriteRuleAccess().getUruleUnconditionalRewriteParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RewriteRule__CruleAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRewriteRuleAccess().getCruleConditionalRewriteParserRuleCall_2_1_0()); }
		ruleConditionalRewrite
		{ after(grammarAccess.getRewriteRuleAccess().getCruleConditionalRewriteParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InferenceRule__GivenAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInferenceRuleAccess().getGivenGivenParserRuleCall_0_0()); }
		ruleGiven
		{ after(grammarAccess.getInferenceRuleAccess().getGivenGivenParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InferenceRule__InferAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInferenceRuleAccess().getInferInferParserRuleCall_2_0()); }
		ruleInfer
		{ after(grammarAccess.getInferenceRuleAccess().getInferInferParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__ExpressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGivenAccess().getExpressionSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getGivenAccess().getExpressionSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__RequiredAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGivenAccess().getRequiredRequiredKeyword_1_0()); }
		(
			{ before(grammarAccess.getGivenAccess().getRequiredRequiredKeyword_1_0()); }
			'required'
			{ after(grammarAccess.getGivenAccess().getRequiredRequiredKeyword_1_0()); }
		)
		{ after(grammarAccess.getGivenAccess().getRequiredRequiredKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Infer__ExpressionAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInferAccess().getExpressionSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getInferAccess().getExpressionSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconditionalRewrite__RhsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnconditionalRewriteAccess().getRhsSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getUnconditionalRewriteAccess().getRhsSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRewrite__RewritesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalRewriteAccess().getRewritesConditionalRewriteRuleParserRuleCall_0_0()); }
		ruleConditionalRewriteRule
		{ after(grammarAccess.getConditionalRewriteAccess().getRewritesConditionalRewriteRuleParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRewrite__RewritesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalRewriteAccess().getRewritesConditionalRewriteRuleParserRuleCall_1_0()); }
		ruleConditionalRewriteRule
		{ after(grammarAccess.getConditionalRewriteAccess().getRewritesConditionalRewriteRuleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRewriteRule__LhsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalRewriteRuleAccess().getLhsSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getConditionalRewriteRuleAccess().getLhsSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRewriteRule__RhsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalRewriteRuleAccess().getRhsSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getConditionalRewriteRuleAccess().getRhsSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
